/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bases;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author VALENTINA
 */
public class RetirarDinero extends javax.swing.JFrame {

    private String numero;
    private Bases bases;
    /**
     * Creates new form RetirarDinero
     */
    public RetirarDinero(String numero) {
        initComponents();
        bases = Bases.getInstancia();
        bases.conectar();
        this.numero = numero;
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtSaldoRetirar = new javax.swing.JTextField();
        btnCancelarRetiro = new javax.swing.JButton();
        btnConfirmarRetiro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Saldo a Retirar:");

        btnCancelarRetiro.setText("Cancelar");
        btnCancelarRetiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarRetiroActionPerformed(evt);
            }
        });

        btnConfirmarRetiro.setText("Confirmar");
        btnConfirmarRetiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarRetiroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConfirmarRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarRetiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txtSaldoRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSaldoRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarRetiro)
                    .addComponent(btnConfirmarRetiro))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarRetiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarRetiroActionPerformed
        MenuBanco ventanaBanco = new MenuBanco(numero);
        ventanaBanco.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelarRetiroActionPerformed

    private void btnConfirmarRetiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarRetiroActionPerformed
        
        String saldoRetirar = txtSaldoRetirar.getText();

        double saldoDisponible = obtenerSaldoDisponible(numero);
    
        
            if (validarSaldo(saldoRetirar, saldoDisponible)) {
                double saldo = Double.parseDouble(saldoRetirar);
                retirarDinero(numero, saldo);
            } else {
                JOptionPane.showMessageDialog(null, "El saldo ingresado no es válido o es mayor al saldo disponible", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnConfirmarRetiroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RetirarDinero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RetirarDinero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RetirarDinero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RetirarDinero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String numero = JOptionPane.showInputDialog(null, "Ingrese el número de celular:");
                new RetirarDinero(numero).setVisible(true);
            }
        });
    }
    
    private double obtenerSaldoDisponible(String celular) {
    Connection conexion = bases.conectar();
    try {
        Statement statement = conexion.createStatement();
        String query = "SELECT SaldoInicial FROM usuario WHERE Celular = '" + celular + "'";
        ResultSet resultSet = statement.executeQuery(query);

        if (resultSet.next()) {
            return resultSet.getDouble("SaldoInicial");
        } else {
            return 0.0; // Si no se encuentra el usuario, se asume saldo disponible 0
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        return 0.0;
    }
}


    private boolean validarSaldo(String saldo, double saldoDisponible) {
        try {
            double valor = Double.parseDouble(saldo);
            if(valor <= saldoDisponible){
                return valor >= 0;
            }else{
            return false;
            }
            
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    private void retirarDinero(String celular, double saldo) {
        
        AplicacionBancaria aplicacionBancaria = new AplicacionBancaria();
        int filasActualizadas = aplicacionBancaria.retirarDinero(celular, saldo);
        
        
        try {

            if (filasActualizadas > 0) {
                MensajeExito2 ventanaMensaje = new MensajeExito2(numero);
                ventanaMensaje.setVisible(true);
                this.dispose();  
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo realizar la consignación", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarRetiro;
    private javax.swing.JButton btnConfirmarRetiro;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtSaldoRetirar;
    // End of variables declaration//GEN-END:variables

    private boolean datosCorrectos(String numero, int clave) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
